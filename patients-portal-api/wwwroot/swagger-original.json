{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Patients Portal",
    "description" : "Patients Portal (ASP.NET Core 3.1)",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/api",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "paths" : {
    "/api/eprescription" : {
      "get" : {
        "tags" : [ "EPrescriptionsApi" ],
        "summary" : "Get all E-Prescriptions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EPrescription"
                  },
                  "x-content-type" : "text/plain"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EPrescription"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EPrescription"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "EPrescriptionsApi" ],
        "summary" : "Add a new E-Prescriptions",
        "requestBody" : {
          "description" : "E-Prescriptions object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/api/eprescription/{ePrescriptionId}" : {
      "put" : {
        "tags" : [ "EPrescriptionsApi" ],
        "summary" : "Update an existing E-Prescriptions",
        "parameters" : [ {
          "name" : "ePrescriptionId",
          "in" : "path",
          "description" : "E-Prescriptions id to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "E-Prescriptions  object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EPrescription"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      },
      "delete" : {
        "tags" : [ "EPrescriptionsApi" ],
        "summary" : "Deletes a E-Prescriptions",
        "parameters" : [ {
          "name" : "ePrescriptionId",
          "in" : "path",
          "description" : "E-Prescriptions  id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "E-Prescriptions  not found"
          }
        }
      }
    },
    "/api/medicines" : {
      "get" : {
        "tags" : [ "MedicinesApi" ],
        "summary" : "Get all medicines",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Medicine"
                  },
                  "x-content-type" : "text/plain"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Medicine"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Medicine"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "MedicinesApi" ],
        "summary" : "Add a new Medicine",
        "requestBody" : {
          "description" : "Medicine object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/medicines/{medicineId}" : {
      "put" : {
        "tags" : [ "MedicinesApi" ],
        "summary" : "Update an existing medicine",
        "parameters" : [ {
          "name" : "medicineId",
          "in" : "path",
          "description" : "Medicine id to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Medicine object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Medicine"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied. Medicine not found."
          }
        }
      },
      "delete" : {
        "tags" : [ "MedicinesApi" ],
        "summary" : "Deletes a medicine",
        "parameters" : [ {
          "name" : "medicineId",
          "in" : "path",
          "description" : "Medicine id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied. Medicine not found"
          }
        }
      }
    },
    "/api/users" : {
      "get" : {
        "tags" : [ "UsersApi" ],
        "summary" : "Get all users",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  },
                  "x-content-type" : "text/plain"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "UsersApi" ],
        "summary" : "Add a new User",
        "requestBody" : {
          "description" : "User object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/users/{userId}" : {
      "put" : {
        "tags" : [ "UsersApi" ],
        "summary" : "Update an existing User",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User id to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "User object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      },
      "delete" : {
        "tags" : [ "UsersApi" ],
        "summary" : "Deletes a user",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "User id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      }
    },
    "/api/visits" : {
      "get" : {
        "tags" : [ "VisitsApi" ],
        "summary" : "Get all visits",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Visit"
                  },
                  "x-content-type" : "text/plain"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Visit"
                  }
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Visit"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "VisitsApi" ],
        "summary" : "Add a new Visit",
        "requestBody" : {
          "description" : "Visit object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid length supplied"
          }
        }
      }
    },
    "/api/visits/{visitId}" : {
      "put" : {
        "tags" : [ "VisitsApi" ],
        "summary" : "Update an existing Visit",
        "parameters" : [ {
          "name" : "visitId",
          "in" : "path",
          "description" : "Visit id to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Visit object",
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            },
            "application/*+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Visit"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      },
      "delete" : {
        "tags" : [ "VisitsApi" ],
        "summary" : "Deletes a Visit",
        "parameters" : [ {
          "name" : "visitId",
          "in" : "path",
          "description" : "Visit id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Medicine" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          }
        },
        "example" : {
          "name" : "name",
          "id" : 6
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "isDoctor" : {
            "type" : "boolean"
          },
          "isPatient" : {
            "type" : "boolean"
          }
        },
        "example" : {
          "isDoctor" : true,
          "name" : "name",
          "id" : "id",
          "isPatient" : true
        }
      },
      "EPrescription" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "medicines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Medicine"
            }
          },
          "reason" : {
            "type" : "string"
          },
          "expiration" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string"
          },
          "patient" : {
            "$ref" : "#/components/schemas/User"
          },
          "doctor" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "example" : {
          "reason" : "reason",
          "medicines" : [ {
            "name" : "name",
            "id" : 6
          }, {
            "name" : "name",
            "id" : 6
          } ],
          "created" : "2000-01-23T04:56:07.000+00:00",
          "patient" : {
            "isDoctor" : true,
            "name" : "name",
            "id" : "id",
            "isPatient" : true
          },
          "expiration" : "2000-01-23T04:56:07.000+00:00",
          "id" : 0,
          "state" : "state"
        }
      },
      "Visit" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "reason" : {
            "type" : "string"
          },
          "length" : {
            "type" : "integer"
          },
          "result" : {
            "type" : "string"
          },
          "patient" : {
            "$ref" : "#/components/schemas/User"
          },
          "doctor" : {
            "$ref" : "#/components/schemas/User"
          }
        },
        "example" : {
          "date" : "2000-01-23T04:56:07.000+00:00",
          "result" : "result",
          "reason" : "reason",
          "created" : "2000-01-23T04:56:07.000+00:00",
          "patient" : {
            "isDoctor" : true,
            "name" : "name",
            "id" : "id",
            "isPatient" : true
          },
          "length" : 6,
          "id" : 0
        }
      }
    }
  }
}
